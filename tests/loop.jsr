#!/usr/bin/env jstar
importPaths.insert(0, '../')
import test for test, run

import event_horizon.uv as uv
import event_horizon.uv.event_loop as event_loop
import event_horizon.uv.tcp for TCP

@test
fun create()
    var loop = event_loop.EventLoop() 
    assert(loop._id != -1)

    var fromId = event_loop.getEventLoop(loop._id) 
    assert(fromId == loop)
end

@test
fun run()
    var loop = event_loop.EventLoop()
    loop.run()
end

@test
fun globalLoopRun()
    uv.loop().run()
end

@test
fun stop()
    var loop = event_loop.EventLoop()
    var tcp = TCP(loop)
    tcp.close(fun()
        loop.stop()
    end)
    loop.run()
end

@test
fun notAlive()
    assert(!uv.loop().alive(), "Loop should not be alive")
end

@test
fun alive()
    var tcp = TCP()
    
    tcp.connect('0.0.0.0', 8080, fun(status)
        tcp.close(fun()
            assert(!uv.loop().alive(), "Loop should not be alive")
        end) 
        assert(uv.loop().alive(), "Loop should be alive")
    end)

    uv.loop().run()

    assert(!uv.loop().alive(), "Loop should not be alive")
end

@test
fun walk()
    var tcp1 = TCP()
    var tcp2 = TCP()

    var count = 0
    uv.loop().walk(fun(handle)
        count += 1 
        handle.close()
    end)

    assert(count == 2, "Worng number of handles in `EventLoop.walk()`: {0}" % count)

    uv.loop().run()

    count = 0
    uv.loop().walk(fun(handle)
        count += 1 
    end)
 
    assert(count == 0, "Second walk should not find any handle")
end

if __name__ == '__main__'
    run()
end
