import promise for Promise, resolved, rejected

static fun step(generator, val, exc=null)
    var res
    try
        res = generator(val) if !exc else generator.throw(exc)
    except Exception e
        return rejected(e)
    end

    if generator.isDone()
        return resolved(res)
    end

    return resolved(res).then(|val| => step(generator, val), |exc| => step(generator, null, exc))
end

fun async(fn)
    return fun(...args)
        var generator = fn(...args)

        if !(generator is Generator)
            return resolved(generator)
        end

        return step(generator, null).catch(|exc| => exc.printStacktrace())
    end
end
