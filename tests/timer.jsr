#!/usr/bin/env jstar
importPaths.insert(0, '../')
import test for test, run, skip

import io

import server_utils for spawnTCPServer

import event_horizon.uv as uv
import event_horizon.uv.errors for strerror, LoopExecutionException, StatusException
import event_horizon.uv.timer for Timer

@test
fun start()
    var t = Timer()
    var called = false
    t.start(1, 0, fun()
        called = true
        t.stop()
        t.close()
    end)
    uv.loop().run()
    assert(called)
end

@test
fun repeat()
    var t = Timer()
    var called = 0

    t.start(10, 10, fun()
        called += 1
        if called == 3
            t.close()
        end
    end)

    uv.loop().run()
    assert(called == 3)
end

@test
fun stop()
    var t = Timer()
    var called = 0
    t.start(10, 10, fun()
        called += 1
        t.stop()
    end)

    uv.loop().run()
    assert(called == 1)

    t.close()
    uv.loop().run()
end

@test
fun again()
    var t = Timer()
    var called = 0

    t.start(0, 10, fun()
        called += 1
        if called == 3
            t.close()
        end
    end)
    t.again()

    uv.loop().run()
    assert(called == 3)
end

@test
fun againFail()
    var t = Timer()
    
    var didThrow = false
    try
        t.again()
    except StatusException e
        didThrow = true
        assert(e.err() == 'invalid argument')
    end

    assert(didThrow)

    t.close()
    uv.loop().run()
end

@test
fun setGetRepeat()
    var t = Timer()
    t.setRepeat(42)    
    assert(t.repeat() == 42)
    t.close()
    uv.loop().run()
end

@test
fun dueIn()
    var t = Timer()
    t.start(10, 10, || => null)
    var dueIn = t.dueIn()
    assert(dueIn == 10)
    t.close()
    uv.loop().run()
end
