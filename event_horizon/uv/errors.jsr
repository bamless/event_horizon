class EventHorizonException is Exception end

class LoopExecutionException is EventHorizonException
    construct(exceptions)
        var cause = exceptions[0] if #exceptions == 1 else null
        this._exceptions = exceptions if #exceptions > 1 else []
        var exceptionMsg = "Exception raised during loop execution." if #exceptions == 1 else "Multiple exceptions raised during loop execution:"
        super(exceptionMsg, cause)
    end
    
    fun printStacktrace()
        super()
        
        var numExceptions = #this._exceptions
        if numExceptions > 1
            print("n")
            for var i, exc in this._exceptions.enumerate()
                exc.printStacktrace()
                if i != numExceptions - 1
                    print("n")
                end
            end
        end
    end

    fun getStacktrace()
        var chunks = [super()]

        var numExceptions = #this._exceptions
        if numExceptions > 0
            chunks.add("nn")
            for var i, exc in this._exceptions.enumerate()
                chunks.add(exc.getStacktrace())
                if i != numExceptions - 1
                    chunks.add("\n\n")
                end
            end
        end
        return chunks.join()
    end

    fun exceptions()
        return this._exceptions
    end
end

class StatusException is EventHorizonException
    construct(status, exc=null)
        super(strerror(status), exc)
        this._status = status
    end

    fun status()
        return this._status
    end
end

native strerror(status)

var Errno = Enum(
  'E2BIG',
  'EACCES',
  'EADDRINUSE',
  'EADDRNOTAVAIL',
  'EAFNOSUPPORT',
  'EAGAIN',
  'EAI_ADDRFAMILY',
  'EAI_AGAIN',
  'EAI_BADFLAGS',
  'EAI_BADHINTS',
  'EAI_CANCELED',
  'EAI_FAIL',
  'EAI_FAMILY',
  'EAI_MEMORY',
  'EAI_NODATA',
  'EAI_NONAME',
  'EAI_OVERFLOW',
  'EAI_PROTOCOL',
  'EAI_SERVICE',
  'EAI_SOCKTYPE',
  'EALREADY',
  'EBADF',
  'EBUSY',
  'ECANCELED',
  'ECHARSET',
  'ECONNABORTED',
  'ECONNREFUSED',
  'ECONNRESET',
  'EDESTADDRREQ',
  'EEXIST',
  'EFAULT',
  'EFBIG',
  'EHOSTUNREACH',
  'EINTR',
  'EINVAL',
  'EIO',
  'EISCONN',
  'EISDIR',
  'ELOOP',
  'EMFILE',
  'EMSGSIZE',
  'ENAMETOOLONG',
  'ENETDOWN',
  'ENETUNREACH',
  'ENFILE',
  'ENOBUFS',
  'ENODEV',
  'ENOENT',
  'ENOMEM',
  'ENONET',
  'ENOPROTOOPT',
  'ENOSPC',
  'ENOSYS',
  'ENOTCONN',
  'ENOTDIR',
  'ENOTEMPTY',
  'ENOTSOCK',
  'ENOTSUP',
  'EOVERFLOW',
  'EPERM',
  'EPIPE',
  'EPROTO',
  'EPROTONOSUPPORT',
  'EPROTOTYPE',
  'ERANGE',
  'EROFS',
  'ESHUTDOWN',
  'ESPIPE',
  'ESRCH',
  'ETIMEDOUT',
  'ETXTBSY',
  'EXDEV',
  'UNKNOWN',
  'EOF',
  'ENXIO',
  'EMLINK',
  'EHOSTDOWN',
  'EREMOTEIO',
  'ENOTTY',
  'EFTYPE',
  'EILSEQ',
  'ESOCKTNOSUPPORT',
  'ENODATA',
)
