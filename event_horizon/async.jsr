import event_horizon.promise for Promise, asResolved

static fun step(gen, arg, exc, resolve, reject)
    var value
    try
        value = gen(arg) if !exc else gen.throw(exc)
    except Exception e
        reject(e)
        return
    end

    if gen.isDone()
        resolve(value)
    else
        return asResolved(value).then(fun(value)
            step(gen, value, null, resolve, reject)
        end, fun(exc)
            step(gen, null, exc, resolve, reject)
        end)
    end
end

fun async(fn)
    return fun(...args)
        var gen = fn.bind(this)(...args)

        if !(gen is Generator)
            return asResolved(gen)
        end

        return Promise(fun(resolve, reject)
            step(gen, null, null, resolve, reject)
        end)
    end
end
